
ЗАДАЧИ НА 2 СЕМЕСТР

Задача 1.
Напишите функцию, которая циклически сдвигает элементы односвязного списка вправо
(A[0] переходит на место A[1],  A[1] на место A[2], ..., последний элемент переходит на место A[0])
Сигнатура: std::list<int> cyclicShift(std::list<int> input);
Example 1:
input: 1 2 3 4 5 6 7
output: 7 1 2 3 4 5 6 

TEST_CASE("Cyclic Shift") {
    std::list<int> example1 = {1, 2, 3, 4, 5};
    std::list<int> res = {5, 1, 2, 3, 4};
    REQUIRE(cyclicShift(example1) == res);
    //тут надо чот еще...
}


Задача 2.
В функцию подается название файла input.txt, в котором записан текст на английском.
Реализовать функцию, которая сделает словарь из всех имеющихся слов и выведет 10 самых популярных слов.

//Спросить, могу ли я как-то подавать файлик???


Задача 3.
Даны два отсортированных вектора целых чисел. 
Написать функцию, которая объединяет их в один отсортированный вектор. Реализовать за O(n).
Сигнатура: std::vector<int> sumVect(std::vector<int> vec_f, std::vector<int> vec_s);
Example:
input: 
-5 -1 4 6
-6 -3 0 1 5 8
output:
-6 -5 -3 -1 0 1 4 5 6 8

TEST_CASE("Sorted vector") {
    std::vector<int> ex1_f = {-5, -1, 4, 6};
    std::vector<int> ex1_s = {-6, -3, 0, 1, 5, 8};
    std::vector<int> res1 = {-6, -5, -3, -1, 0, 1, 4, 5, 6, 8}
    REQUIRE(sumVect(ex1_f, ex1_s) == res1);
    // написать еще тестов
}



Задача 4.
Даны два отсортированных по убываю  стека. Написать функцию,
которая объединяет стеки в один с порядком по возрастанию.




Дана последовательность целых чисел, заканчивающаяся числом 0. 
Выведите эту последовательность в обратном порядке.


При решении этой задачи нельзя пользоваться массивами и прочими динамическими структурами данных. Рекурсия вам поможет."
Напишите программу, реализующую игру "Угадай число". Компьютер загадывает число от 0 до 999 (используйте генерацию случайных чисел). На каждом шаге пользователь делает предположение, а компьютер сообщает, является ли это число больше, меньше или равно загаданному. Когда пользователь отгадывает задуманное число, игра заканчивается.
Напишите программу, которая объединяет два упорядоченных по возрастанию массива в один (тоже упорядоченный) массив.
Напишите программу, которая содержит текущую информацию о 10 заявках на авиабилеты. Каждая заявка имеет: пункт назначения, номер рейса, ФИО пассажира, желаемую дату вылета. Программа должна обеспечивать: хранение всех заявок в виде списка, добавление и удаление заявок, вывод всех заявок.
Напишите программу учета оценок студентов. Для этого создайте текстовый файл с именем input.txt, содержащий список из 10 студентов и их оценки по 3 предметам: математика, физика и информатика. Содержимое файла: в первой строке находится общее число студентов, в каждой следующей находится ФИО студента и три целых числа(оценки) (данные в строке отделяются пробелами). Создайте класс, с помощью которого вы будете считывать данные из файла. На экран выведите ФИО студентов с оценкаи в порядке убывания их среднего балла. 
Создайте класс с именем Student, содержащую слудующие поля: Name, Year, Rating (успеваемость, массив из пяти элементов). Функции  класса: ввод данных в массив Rating, вывод в консоль записи, вывод среднего балла
